services:
  - docker

env:
  global:
    - IMAGE=qgis/qgis
    - GIT_NAME: "'Automatic Publish'"
    - GIT_EMAIL: jan.caha@outlook.org
    - GH_REF: git@github.com:JanCaha/qgis-processing-r.git
    - MKDOCS_YML: ./website/mkdocs.yml

  matrix:
    - QGIS_VERSION_TAG=latest
    - QGIS_VERSION_TAG=release-3_4

language: python

cache:
  directories:
    - $HOME/.cache/pip

python:
  - "3.6"

addons:
  apt:
    packages:
      - git
      - python-software-properties

before_install:
  - docker pull ${IMAGE}:${QGIS_VERSION_TAG}

install:
  - pip install --upgrade pip
  - pip install --upgrade pylint
  - pip install --upgrade pycodestyle
  # install to build website 
  - pip install mkdocs
  - pip install MarkdownHighlight
  - pip install https://codeload.github.com/mkdocs/mkdocs-bootstrap/zip/master
  #
  
  - docker run -d --name qgis-testing-environment -v ${TRAVIS_BUILD_DIR}:/tests_directory -e DISPLAY=:99 ${IMAGE}:${QGIS_VERSION_TAG}
  - sleep 10
  - docker exec -it qgis-testing-environment sh -c "qgis_setup.sh processing_r"

  - docker exec -it qgis-testing-environment sh -c "rm -f  /root/.local/share/QGIS/QGIS3/profiles/default/python/plugins/processing_r"
  - docker exec -it qgis-testing-environment sh -c "ln -s /tests_directory/processing_r /root/.local/share/QGIS/QGIS3/profiles/default/python/plugins/processing_r"

  - docker exec -it qgis-testing-environment sh -c "pip3 install -r /tests_directory/REQUIREMENTS_TESTING.txt"
  - docker exec -it qgis-testing-environment sh -c "apt-get update"
  - docker exec -it qgis-testing-environment sh -c "apt-get install -y r-base"

script:

  - docker exec -it qgis-testing-environment sh -c "qgis_testrunner.sh processing_r.test_suite.test_package"

  - make pylint
  - make pycodestyle
  
  # build and deploy website
  - openssl aes-256-cbc -K $encrypted_9bd3898936c8_key -iv $encrypted_9bd3898936c8_iv -in deploy-key.enc -out deploy-key -d
  - chmod 600 deploy-key
  - eval `ssh-agent -s`
  - ssh-add deploy-key
  - git config user.name "${GIT_NAME}"
  - git config user.email "${GIT_EMAIL}"
  - git remote add gh-token "${GH_REF}";
  - git fetch gh-token && git fetch gh-token gh-pages:gh-pages;
  - if [ "${TRAVIS_PULL_REQUEST}" = "false" ]; then echo "Pushing to github"; PYTHONPATH=src/ mkdocs gh-deploy --clean --config-file "${MKDOCS_YML}" --remote-name gh-token; git push gh-token gh-pages; fi;
  # end build and deploy website
  
sudo: false
